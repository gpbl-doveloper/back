// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// TODO: sqlite does not support ENUM => postgresql ë¡œ migrate
// enum Role {
//   PARENT
//   TEACHER
// }
// enum Sex{
//   FEMALE 
//   MALE
// }

model User {
  id        Int      @id @default(autoincrement())
  uid       String   @unique // firebase uid
  name      String
  role      String   @default("PARENT") // PARENT, TEACHER
  phone     String?
  email     String   @unique
  createdAt DateTime @default(now())

  authoredDiaries Diary[] @relation("DiaryAuthorRelation")
  dogs            Dog[]
}

model Breed {
  id   Int    @id @default(autoincrement())
  name String
  Dog  Dog[]
}

model Dog {
  id         Int      @id @default(autoincrement())
  name       String
  img        File?    @relation(fields: [fileId], references: [id])
  sex        String
  isNeutered Boolean
  bod        DateTime
  breed      Breed    @relation(fields: [breedId], references: [id])
  medicine   String?
  // meal      String? 

  owner   User @relation(fields: [ownerId], references: [id])
  ownerId Int

  dogDiaries Diary[] @relation("DiaryDogRelation")
  fileId     Int?
  breedId    Int
}

// FIXME nullable -> notnull
model Diary {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())

  author   User? @relation("DiaryAuthorRelation", fields: [authorId], references: [id])
  authorId Int?
  dog      Dog?  @relation("DiaryDogRelation", fields: [dogId], references: [id])
  dogId    Int?

  files File[]
}

model File {
  id        Int      @id @default(autoincrement())
  fileKey   String   @unique
  fileURL   String
  // fileType  String   @default("image/png") 
  createdAt DateTime @default(now())

  diary   Diary? @relation(fields: [diaryId], references: [id])
  diaryId Int?
  Dog     Dog[]
}
